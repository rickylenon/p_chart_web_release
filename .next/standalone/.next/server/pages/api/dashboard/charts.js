"use strict";(()=>{var e={};e.id=9556,e.ids=[9556],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},39533:(e,t,r)=>{r.r(t),r.d(t,{config:()=>u,default:()=>c,routeModule:()=>d});var a={};r.r(a),r.d(a,{default:()=>s});var l=r(71802),n=r(47153),o=r(56249),i=r(44507);let s=(0,r(66826).QO)(async function(e,t,r){if("GET"!==e.method)return t.status(405).json({error:"Method not allowed"});try{console.log("API: Dashboard charts auth session validated, user:",r?.user?.name),console.log("Fetching dashboard chart data with query params:",e.query);let{year:a,month:l,line:n,series:o,status:s,poNumber:c}=e.query;if(a&&!/^\d{4}$/.test(a))return console.warn("Invalid year format:",a),t.status(400).json({error:"Invalid year format. Expected YYYY."});let u={},d={};if(a){let e=Array.isArray(a)?a[0]:a,t=new Date(`${e}-01-01`),r=new Date(`${Number(e)+1}-01-01`);r.setMilliseconds(r.getMilliseconds()-1),u.startTime={gte:t,lte:r},console.log(`Applied year filter for ${e}:`,{yearStart:t,yearEnd:r})}if(l&&"All"!==l){let e=Array.isArray(l)?l[0]:l,t=parseInt(e);if(!isNaN(t)&&t>=1&&t<=12&&a){let r=Array.isArray(a)?a[0]:a,l=new Date(`${r}-${t.toString().padStart(2,"0")}-01`),n=new Date(Number(r),t,0);n.setHours(23,59,59,999),u.startTime={gte:l,lte:n},console.log(`Applied month filter for ${e}:`,{monthStart:l,monthEnd:n})}else console.warn("Invalid month value:",e)}if(n&&"All"!==n){let e=Array.isArray(n)?n[0]:n;u.lineNo=e,console.log("Applied line filter (using lineNo):",e)}if(o&&"All"!==o){let e=Array.isArray(o)?o[0]:o;d.itemName=e,console.log("Applied series filter (using itemName):",e)}if(s&&"All"!==s){let e=Array.isArray(s)?s[0]:s;d.status=e,console.log("Applied status filter to productionOrder:",e)}if(c){let e=Array.isArray(c)?c[0]:c;console.log(`Filtering by PO number: ${e}`);try{if(!await i._.productionOrder.findFirst({where:{poNumber:{contains:e}},select:{id:!0}}))return console.log(`No production order found with PO number containing: ${e}`),t.status(200).json({defectRatioData:[],machineDefectsData:[],defectTypesData:[],appliedFilters:{year:a||null,month:"All"!==l?l:null,line:"All"!==n?n:null,series:"All"!==o?o:null,status:"All"!==s?s:null,poNumber:e},noData:!0});d.poNumber={contains:e}}catch(t){console.error("Error checking PO existence:",t),d.poNumber={contains:e}}}Object.keys(d).length>0&&(u.productionOrder={is:d}),console.log("Using filter conditions:",JSON.stringify(u,null,2));let p=new Date;p.setDate(p.getDate()-14),p.setHours(0,0,0,0);let f={startTime:{gte:p,...u.startTime?{lte:u.startTime.lte,gte:u.startTime.gte>p?u.startTime.gte:p}:{}},endTime:{not:null},...u.lineNo?{lineNo:u.lineNo}:{},...u.productionOrder?{productionOrder:u.productionOrder}:{}};try{console.time("operations-query");let e=await i._.operation.findMany({where:f,include:{operationDefects:!0},orderBy:{startTime:"asc"}});if(console.timeEnd("operations-query"),console.log(`Found ${e.length} operations for date range with filters:`,f),0===e.length)return console.log("No operations found for the applied filters"),t.status(200).json({defectRatioData:[],machineDefectsData:[],defectTypesData:[],appliedFilters:{year:a||null,month:"All"!==l?l:null,line:"All"!==n?n:null,series:"All"!==o?o:null,status:"All"!==s?s:null,poNumber:c?Array.isArray(c)?c[0]:c:null},noData:!0});let r={};e.forEach(e=>{let t=e.operation||"Unknown";r[t]||(r[t]={totalInput:0,totalDefects:0}),r[t].totalInput+=e.inputQuantity||0,e.operationDefects.forEach(e=>{r[t].totalDefects+=e.quantity||0})});let u=Object.entries(r).map(([e,t])=>{let r=t.totalInput>0?t.totalDefects/t.totalInput:0;return{date:e,ratio:r,input:t.totalInput,defects:t.totalDefects}}).sort((e,t)=>{let r=parseInt(e.date.replace(/\D/g,""))||0,a=parseInt(t.date.replace(/\D/g,""))||0;return r-a});console.log("Defect ratio data:",u);let d={operation:f};console.time("machineDefects-query"),console.log("Fetching machine defects with filters:",JSON.stringify(d,null,2));let p=await i._.operationDefect.findMany({where:d,include:{operation:!0,defect:!0}});console.timeEnd("machineDefects-query"),console.log(`Found ${p.length} defects for machine chart with filters:`,d);let h={},m={M1:"Cable Cutting machine",M2:"Sleeve Crimping machine",M3:"Assembly machine"};p.forEach(e=>{let t=e.defectMachine||"unknown";if(!h[t]){let e=m[t]||t;h[t]={fullName:e,defects:0}}h[t].defects+=e.quantity||0});let y=Object.entries(h).map(([e,t])=>({name:e,fullName:t.fullName,defects:t.defects})).sort((e,t)=>t.defects-e.defects).slice(0,5);console.log("Machine defects data:",y);let g={};p.forEach(e=>{if(!e.defect){console.log("Skipping defect with null defect reference:",e.id);return}let t=e.defect.name,r=e.defectCategory;g[t]||(g[t]={category:r,value:0}),g[t].value+=e.quantity||0});let A=Object.entries(g).map(([e,t])=>({name:e.replace(" ","\n"),category:t.category,value:t.value})).sort((e,t)=>t.value-e.value).slice(0,5);return console.log("Defect types data:",A),t.setHeader("Cache-Control","public, max-age=300"),t.status(200).json({defectRatioData:u,machineDefectsData:y,defectTypesData:A,appliedFilters:{year:a||null,month:"All"!==l?l:null,line:"All"!==n?n:null,series:"All"!==o?o:null,status:"All"!==s?s:null,poNumber:c?Array.isArray(c)?c[0]:c:null}})}catch(e){return console.error("Error processing chart data:",e),t.status(200).json({defectRatioData:[],machineDefectsData:[],defectTypesData:[],appliedFilters:{year:a||null,month:"All"!==l?l:null,line:"All"!==n?n:null,series:"All"!==o?o:null,status:"All"!==s?s:null,poNumber:c?Array.isArray(c)?c[0]:c:null},error:"Failed to process chart data"})}}catch(e){return console.error("Error fetching dashboard chart data:",e),t.status(200).json({defectRatioData:[],machineDefectsData:[],defectTypesData:[],error:"Failed to fetch dashboard chart data"})}}),c=(0,o.l)(a,"default"),u=(0,o.l)(a,"config"),d=new l.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/dashboard/charts",pathname:"/api/dashboard/charts",bundlePath:"",filename:""},userland:a})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[549],()=>r(39533));module.exports=a})();