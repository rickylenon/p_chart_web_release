"use strict";(()=>{var e={};e.id=7986,e.ids=[7986],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},52601:(e,t,r)=>{r.r(t),r.d(t,{config:()=>m,default:()=>c,routeModule:()=>f});var o={};r.r(o),r.d(o,{default:()=>p});var n=r(71802),a=r(47153),i=r(56249),s=r(66826),u=r(44507),d=r(41099);async function l(e,t,r){if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});try{let{poNumber:o,operationCode:n,rf:a,lineNo:i,timestamp:s}=e.body;if(console.log(`Completing operation for PO: ${o}, Operation: ${n}, RF: ${a}, Line: ${i}`),!o||!n||!i)return t.status(400).json({error:"Missing required parameters"});let l=r?.user?.role||"",p="string"==typeof l&&"admin"===l.toLowerCase();console.log("User role:",l,"Is admin?",p);let c=parseInt(a)||1,m=await u.Z.productionOrder.findUnique({where:{poNumber:o},include:{operations:{include:{operationDefects:!0},orderBy:{id:"asc"}}}});if(!m)return t.status(404).json({error:"Production order not found"});let f=m.operations.find(e=>e.operation.toLowerCase()===n.toLowerCase());if(!f)return t.status(404).json({error:"Operation not found"});if(f.endTime&&!p)return console.log("Non-admin user tried to edit a completed operation"),t.status(403).json({error:"Only admin users can edit completed operations"});let w=await u.Z.operationStep.findMany({orderBy:{stepOrder:"asc"}}),g=[...m.operations].sort((e,t)=>{let r=w.find(t=>t.operationNumber.toLowerCase()===e.operation.toLowerCase()),o=w.find(e=>e.operationNumber.toLowerCase()===t.operation.toLowerCase());return(r?.stepOrder||0)-(o?.stepOrder||0)}),y=g.findIndex(e=>e.id===f.id),h=y<g.length-1?g[y+1]:null,x=f.operationDefects||[],O=x.reduce((e,t)=>{let r=t.defectReworkable?t.quantity-t.quantityRework:t.quantity;return e+r},0),$=x.reduce((e,t)=>e+(t.quantityReplacement||0),0);console.log(`Total replacements: ${$}`);let q=Math.max(0,f.inputQuantity-O+$);console.log(`Output calculation: Input (${f.inputQuantity}) - Effective Defects (${O}) + Replacements (${$}) = ${q}`);let I=r?.user?.id?parseInt(r.user.id):null;if(!I)return t.status(401).json({error:"User ID is required for this operation"});let b=(0,d.n)(e),N=await u.Z.$transaction(async e=>{let t={...f},r=await e.operation.update({where:{id:f.id},data:{endTime:s?new Date(s):new Date,outputQuantity:q,rf:c,lineNo:i}});console.log(`Operation ${n} completed with output: ${q}`),await (0,d.U)({tableName:"operations",recordId:f.id,action:"update",oldValues:t,newValues:r,userId:I,...b});let o={};if(h){o={currentOperation:h.operation,currentOperationEndTime:null,currentOperationStartTime:null};let t={...h},r=await e.operation.update({where:{id:h.id},data:{inputQuantity:q}});await (0,d.U)({tableName:"operations",recordId:h.id,action:"update",oldValues:t,newValues:r,userId:I,...b}),console.log(`Updated next operation (${h.operation}) input quantity to ${q}`)}else o={status:"COMPLETED",currentOperationEndTime:new Date},console.log("No next operation, marking PO as completed");let a={...m},u=await e.productionOrder.update({where:{id:m.id},data:o,include:{operations:{include:{operationDefects:!0}}}});return await (0,d.U)({tableName:"production_orders",recordId:m.id,action:"update",oldValues:a,newValues:u,userId:I,...b}),u});return t.status(200).json(N)}catch(e){return console.error("Error completing operation:",e),t.status(500).json({error:"An error occurred while completing the operation"})}}let p=(0,s.QO)(l),c=(0,i.l)(o,"default"),m=(0,i.l)(o,"config"),f=new n.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/operations/complete",pathname:"/api/operations/complete",bundlePath:"",filename:""},userland:o})},41099:(e,t,r)=>{r.d(t,{U:()=>n,n:()=>a});var o=r(44507);async function n(e){console.log(`Creating audit log for ${e.tableName}:${e.recordId}, action: ${e.action}`);try{let t=String(e.recordId),r=e.oldValues?JSON.stringify(e.oldValues):null,n=e.newValues?JSON.stringify(e.newValues):null,a=await o.Z.auditLog.create({data:{tableName:e.tableName,recordId:t,action:e.action,oldValues:r,newValues:n,userId:e.userId,ipAddress:e.ipAddress||null,userAgent:e.userAgent||null}});return console.log(`Audit log created with ID: ${a.id}`),a}catch(e){return console.error("Error creating audit log:",e),null}}function a(e){let t=e.headers["x-forwarded-for"]||e.socket.remoteAddress||null,r=e.headers["user-agent"]||null;return{ipAddress:"string"==typeof t?t.split(",")[0].trim():null,userAgent:r}}}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[549],()=>r(52601));module.exports=o})();