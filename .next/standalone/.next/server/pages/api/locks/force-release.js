"use strict";(()=>{var e={};e.id=4319,e.ids=[4319],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},10481:(e,r,s)=>{s.r(r),s.d(r,{config:()=>p,default:()=>c,routeModule:()=>f});var t={};s.r(t),s.d(t,{default:()=>l});var o=s(71802),i=s(47153),a=s(56249),n=s(66826),d=s(44507);async function u(e,r,s){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{resourceType:t,resourceId:o}="string"==typeof e.body?JSON.parse(e.body):e.body,i=s?.user;if(console.log(`Force lock release requested for ${t}:${o} by user ${i?.name} (${i?.id})`),!t||!o)return r.status(400).json({success:!1,error:"Resource type and ID are required"});if(!i||!i.id)return r.status(401).json({success:!1,error:"User not authenticated"});let a=s?.user?.role||"";if(!("string"==typeof a&&"admin"===a.toLowerCase()))return console.log(`Non-admin user ${i.name} (${i.id}) attempted to force release a lock`),r.status(403).json({success:!1,error:"Admin permissions required"});if("productionOrder"!==t)return r.status(400).json({success:!1,error:"Unsupported resource type"});let{statusCode:n,...u}=await d.Z.$transaction(async e=>{let r=await e.productionOrder.findUnique({where:{poNumber:o},select:{id:!0,editingUserId:!0,editingUserName:!0,lockedAt:!0}});if(!r)return{success:!1,error:"Resource not found",statusCode:404};if(null===r.editingUserId)return console.log(`No lock exists for ${t}:${o}`),{success:!0,message:"No lock existed to release",statusCode:200};let s={userId:r.editingUserId,userName:r.editingUserName};return await e.productionOrder.update({where:{id:r.id},data:{editingUserId:null,editingUserName:null,lockedAt:null}}),console.log(`Admin ${i.name} (${i.id}) force released lock for ${t}:${o} from user ${s.userName} (${s.userId})`),await e.auditLog.create({data:{tableName:"ProductionOrder",recordId:r.id.toString(),action:"ForceReleaseLock",userId:parseInt(i.id),oldValues:JSON.stringify({editingUserId:s.userId,editingUserName:s.userName,lockedAt:r.lockedAt}),newValues:JSON.stringify({editingUserId:null,editingUserName:null,lockedAt:null})}}),{success:!0,message:`Lock force-released from user ${s.userName}`,statusCode:200}});return r.status(n||200).json(u)}catch(e){return console.error("Error force-releasing lock:",e),r.status(500).json({success:!1,error:"Failed to force-release lock"})}}let l=(0,n.QO)(u),c=(0,a.l)(t,"default"),p=(0,a.l)(t,"config"),f=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/locks/force-release",pathname:"/api/locks/force-release",bundlePath:"",filename:""},userland:t})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var s=e=>r(r.s=e),t=r.X(0,[549],()=>s(10481));module.exports=t})();