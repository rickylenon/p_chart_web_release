"use strict";(()=>{var e={};e.id=9877,e.ids=[9877],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},28862:(e,t,r)=>{r.r(t),r.d(t,{config:()=>c,default:()=>l,routeModule:()=>p});var s={};r.r(s),r.d(s,{default:()=>u});var a=r(71802),o=r(47153),n=r(56249),i=r(44507);async function d(e,t,r){try{console.log("API: StandardCosts index auth session validated, user:",r?.user?.name);let s=r?.user?.role||"",a="admin"===s.toLowerCase();if("GET"!==e.method&&!a)return t.status(403).json({error:"Admin access required"});if(console.log("StandardCosts API called"),"GET"===e.method){let{search:r,active:s,page:a="1",limit:o="20",sortField:n="itemName",sortDirection:d="asc"}=e.query;console.log("Fetching standard costs with params:",{search:r,active:s,page:a,limit:o,sortField:n,sortDirection:d});let u=parseInt(a,10),l=parseInt(o,10),c=(u-1)*l,p={};"true"===s?p.isActive=!0:"false"===s&&(p.isActive=!1),r&&"string"==typeof r&&(p.OR=[{itemName:{contains:r,mode:"insensitive"}},{description:{contains:r,mode:"insensitive"}}]);let m={};"costPerUnit"===n?m.costPerUnit=d:"createdAt"===n?m.createdAt=d:"updatedAt"===n?m.updatedAt=d:m.itemName=d,console.log("Using query filters:",JSON.stringify(p,null,2),"OrderBy:",m);let[f,g]=await Promise.all([i.Z.standardCost.findMany({where:p,orderBy:m,skip:c,take:l}),i.Z.standardCost.count({where:p})]);console.log(`Found ${f.length} standard costs out of ${g} total`);let h=f.map(e=>({...e,costPerUnit:Number(e.costPerUnit)}));return t.status(200).json({data:h,total:g,totalPages:Math.ceil(g/l),page:u,limit:l})}if("POST"===e.method)try{let s="string"==typeof e.body?JSON.parse(e.body):e.body;console.log("Creating new standard cost with data:",s);let{itemName:a,description:o,costPerUnit:n,currency:d}=s;if(!a||!n)return t.status(400).json({error:"Item name and cost per unit are required"});let u=parseFloat(n);if(isNaN(u)||u<0)return t.status(400).json({error:"Cost per unit must be a valid positive number"});if(await i.Z.standardCost.findUnique({where:{itemName:a}}))return t.status(409).json({error:"A standard cost with this item name already exists"});let l=r?.user?.id?parseInt(r.user.id):null,c=await i.Z.standardCost.create({data:{itemName:a,description:o,costPerUnit:u,currency:d||"USD",isActive:!0,createdById:l}});console.log(`Created new standard cost with ID: ${c.id}`);let p={...c,costPerUnit:Number(c.costPerUnit)};return t.status(201).json(p)}catch(e){return console.error("Error creating standard cost:",e),t.status(500).json({error:"Failed to create standard cost",details:e instanceof Error?e.message:"Unknown error"})}return t.status(405).json({error:"Method not allowed"})}catch(e){return console.error("Error in handler:",e),t.status(500).json({error:"Failed to process request"})}}let u=(0,r(66826).QO)(d),l=(0,n.l)(s,"default"),c=(0,n.l)(s,"config"),p=new a.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/standard-costs",pathname:"/api/standard-costs",bundlePath:"",filename:""},userland:s})}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[549],()=>r(28862));module.exports=s})();