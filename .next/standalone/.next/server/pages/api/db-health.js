"use strict";(()=>{var e={};e.id=6043,e.ids=[6043],e.modules={53524:e=>{e.exports=require("@prisma/client")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,s){return s in t?t[s]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,s)):"function"==typeof t&&"default"===s?t:void 0}}})},37816:(e,t,s)=>{s.r(t),s.d(t,{config:()=>u,default:()=>c,routeModule:()=>P});var n={};s.r(n),s.d(n,{default:()=>l});var o=s(71802),r=s(47153),a=s(56249),i=s(44507);async function l(e,t){if("GET"!==e.method)return t.status(405).json({error:"Method not allowed"});try{console.log("[PRISMA_DB] DB Health check requested"),console.log("[PRISMA_DB] Environment variable check:"),console.log("[PRISMA_DB] DATABASE_URL exists: false"),console.log(`[PRISMA_DB] POSTGRES_PRISMA_URL exists: ${!!process.env.POSTGRES_PRISMA_URL}`),console.log(`[PRISMA_DB] POSTGRES_URL_NON_POOLING exists: ${!!process.env.POSTGRES_URL_NON_POOLING}`),console.log("[PRISMA_DB] Attempting DB connection test...");let e=await i._.$queryRaw`SELECT 1 as health`;return console.log("[PRISMA_DB] Database connection successful:",e),t.status(200).json({status:"ok",message:"Database connection successful",timestamp:new Date().toISOString(),environment:"production",databaseUrlStatus:"missing",postgresUrlStatus:process.env.POSTGRES_PRISMA_URL?"set":"missing"})}catch(e){return console.error("[PRISMA_DB] Database health check failed:",e),e instanceof Error&&console.error("[PRISMA_DB] Error details:",{name:e.name,message:e.message,stack:e.stack}),t.status(500).json({status:"error",message:"Database connection failed",error:e instanceof Error?e.message:"Unknown error",timestamp:new Date().toISOString(),environment:"production",databaseUrlStatus:"missing",postgresUrlStatus:process.env.POSTGRES_PRISMA_URL?"set":"missing"})}}let c=(0,a.l)(n,"default"),u=(0,a.l)(n,"config"),P=new o.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/db-health",pathname:"/api/db-health",bundlePath:"",filename:""},userland:n})},44507:(e,t,s)=>{s.d(t,{Z:()=>r,_:()=>o});var n=s(53524);let o=global.prisma||new n.PrismaClient,r=o},47153:(e,t)=>{var s;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return s}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(s||(s={}))},71802:(e,t,s)=>{e.exports=s(20145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var s=t(t.s=37816);module.exports=s})();