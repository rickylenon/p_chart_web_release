"use strict";(()=>{var e={};e.id=9202,e.ids=[9202],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},32395:(e,t,a)=>{a.r(t),a.d(t,{config:()=>p,default:()=>u,routeModule:()=>f});var r={};a.r(r),a.d(r,{default:()=>d});var o=a(71802),i=a(47153),s=a(56249),n=a(66826),c=a(44507);let l=async(e,t,a)=>{try{if(console.log("API: MasterDefects index auth session validated, user:",a?.user?.name),console.log("MasterDefects API called"),"GET"===e.method){let{operation:a,poNumber:r,category:o,active:i,search:s,page:n="1",limit:l="20",sortField:d="name",sortDirection:u="asc"}=e.query;console.log("Fetching master defects with params:",{operation:a,poNumber:r,category:o,active:i,search:s,page:n,limit:l,sortField:d,sortDirection:u});let p=parseInt(n,10),f=parseInt(l,10),g=(p-1)*f,m={};if(a&&"string"==typeof a&&(m.applicableOperation=a.toUpperCase()),o&&"string"==typeof o&&(m.category=o),"true"===i?m.isActive=!0:"false"===i&&(m.isActive=!1),s&&"string"==typeof s&&""!==s.trim()){let e=s.trim();console.log(`Using search term: "${e}"`),m.OR=[{name:{contains:e}},{description:{contains:e}},{category:{contains:e}},{applicableOperation:{contains:e}},{machine:{contains:e}}],console.log("Search filter applied with OR conditions")}let y=["name","category","applicableOperation","machine","reworkable","isActive"].includes(d)?d:"name",h={};h[y]="desc"===u?"desc":"asc";let q=await c.Z.masterDefect.count({where:m}),w=await c.Z.masterDefect.findMany({where:m,orderBy:[h,{category:"asc"},{name:"asc"}],skip:g,take:f});if(console.log(`Found ${w.length} master defects (page ${p} of ${Math.ceil(q/f)})`),a&&r&&"string"==typeof a&&"string"==typeof r){console.log(`Looking for saved master defect quantities for PO: ${r}`);let e=await c.Z.operation.findFirst({where:{productionOrder:{poNumber:r},operation:a.toUpperCase()},include:{operationDefects:!0}});if(e&&e.operationDefects.length>0){console.log(`Found ${e.operationDefects.length} saved master defects for this operation`);let a=w.map(t=>{let a=e.operationDefects.find(e=>e.defectName===t.name);return a?(console.log(`Applying saved quantities for master defect: ${t.name}, QTY: ${a.quantity}, RW: ${a.quantityRework}, NG: ${a.quantityNogood}`),{...t,quantity:a.quantity,quantityRework:a.quantityRework,quantityNogood:a.quantityNogood}):{...t,quantity:0,quantityRework:0,quantityNogood:0}});return console.log("Returning paginated master defects with quantities"),t.status(200).json({data:a,page:p,limit:f,total:q,totalPages:Math.ceil(q/f)})}let o=w.map(e=>({...e,quantity:0,quantityRework:0,quantityNogood:0}));return console.log("Returning paginated master defects with zero quantities"),t.status(200).json({data:o,page:p,limit:f,total:q,totalPages:Math.ceil(q/f)})}return console.log("Returning paginated master defects without quantities"),t.status(200).json({data:w,page:p,limit:f,total:q,totalPages:Math.ceil(q/f)})}if("POST"===e.method)try{let a="string"==typeof e.body?JSON.parse(e.body):e.body;console.log("Creating new master defect with data:",a);let{name:r,description:o,category:i,applicableOperation:s,reworkable:n,machine:l}=a;if(!r||!i||!s)return t.status(400).json({error:"Name, category, and applicable operation are required"});if(await c.Z.masterDefect.findFirst({where:{name:r,applicableOperation:s}}))return t.status(409).json({error:"A master defect with this name and applicable operation already exists"});let d=await c.Z.masterDefect.create({data:{name:r,description:o,category:i,applicableOperation:s,reworkable:n||!1,machine:l,isActive:!0}});return console.log(`Created new master defect with ID: ${d.id}`),t.status(201).json(d)}catch(e){return console.error("Error creating master defect:",e),t.status(500).json({error:"Failed to create master defect",details:e instanceof Error?e.message:"Unknown error"})}return t.status(405).json({error:"Method not allowed"})}catch(e){return console.error("Error in handler:",e),t.status(500).json({error:"Failed to process request"})}},d=(0,n.QO)(l),u=(0,s.l)(r,"default"),p=(0,s.l)(r,"config"),f=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/master-defects",pathname:"/api/master-defects",bundlePath:"",filename:""},userland:r})}};var t=require("../../webpack-api-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[549],()=>a(32395));module.exports=r})();