"use strict";(()=>{var e={};e.id=3012,e.ids=[3012],e.modules={53524:e=>{e.exports=require("@prisma/client")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6302:e=>{e.exports=require("xlsx")},56249:(e,o)=>{Object.defineProperty(o,"l",{enumerable:!0,get:function(){return function e(o,t){return t in o?o[t]:"then"in o&&"function"==typeof o.then?o.then(o=>e(o,t)):"function"==typeof o&&"default"===t?o:void 0}}})},33403:(e,o,t)=>{t.r(o),t.d(o,{config:()=>f,default:()=>d,routeModule:()=>g});var r={};t.r(r),t.d(r,{default:()=>c});var n=t(71802),l=t(47153),s=t(56249),i=t(19001),a=t(44507),u=t(6302);async function p(e,o){if(console.log("Export operation lines API called"),"GET"!==e.method)return o.status(405).json({error:"Method not allowed"});try{let t=e.headers["x-user-role"];if(!("string"==typeof t&&"admin"===t.toLowerCase()))return console.log("Access denied - user role:",t),o.status(403).json({error:"Admin access required"});console.log("Fetching operation lines for export...");let r=await a.Z.operationLine.findMany({orderBy:[{operationNumber:"asc"},{lineNumber:"asc"}]});if(console.log(`Found ${r.length} operation lines`),0===r.length)return o.status(404).json({error:"No operation lines found",message:"There are no operation lines in the database to export"});let n=[...new Set(r.map(e=>e.operationNumber))].sort(),l=[...new Set(r.map(e=>e.lineNumber))].sort();console.log("Unique operations:",n),console.log("Unique lines count:",l.length);let s=[];s.push(n);let i={};for(let e of n)i[e]=r.filter(o=>o.operationNumber===e).map(e=>e.lineNumber).sort();console.log("Operation groups:",i);let p=Math.max(...Object.values(i).map(e=>e.length));console.log("Maximum lines in any operation:",p);for(let e=0;e<p;e++){let o=[];for(let t of n){let r=i[t];o.push(r[e]||"")}s.push(o)}console.log(`Generated Excel data with ${s.length} rows`);let c=u.utils.book_new(),d=u.utils.aoa_to_sheet(s),f=n.map(()=>({wch:25}));d["!cols"]=f,u.utils.book_append_sheet(c,d,"Operation Lines");let g=u.write(c,{bookType:"xlsx",type:"buffer"}).toString("base64"),m=new Date().toISOString().replace(/[:.]/g,"-").slice(0,19),h=`operation_lines_export_${m}.xlsx`;return console.log(`Export completed successfully. Filename: ${h}`),o.status(200).json({success:!0,message:"Operation lines exported successfully",data:{filename:h,excelData:g,operationCount:n.length,lineCount:l.length,totalRecords:r.length}})}catch(e){return console.error("Error exporting operation lines:",e),o.status(500).json({error:"Failed to export operation lines",details:void 0})}}let c=(0,i.E)(p),d=(0,s.l)(r,"default"),f=(0,s.l)(r,"config"),g=new n.PagesAPIRouteModule({definition:{kind:l.x.PAGES_API,page:"/api/admin/export-operation-lines",pathname:"/api/admin/export-operation-lines",bundlePath:"",filename:""},userland:r})},44507:(e,o,t)=>{t.d(o,{Z:()=>l,_:()=>n});var r=t(53524);let n=global.prisma||new r.PrismaClient,l=n},19001:(e,o,t)=>{t.d(o,{E:()=>r});function r(e){return async function(o,t){console.log("API Middleware: Checking auth");try{return console.log("API Middleware: Auth passed (dev mode)"),e(o,t)}catch(e){return console.error("API Auth middleware error:",e),t.status(500).json({error:"Internal server error in auth middleware"})}}}},47153:(e,o)=>{var t;Object.defineProperty(o,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},71802:(e,o,t)=>{e.exports=t(20145)}};var o=require("../../../webpack-api-runtime.js");o.C(e);var t=o(o.s=33403);module.exports=t})();