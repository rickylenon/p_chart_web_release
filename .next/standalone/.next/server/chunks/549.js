"use strict";exports.id=549,exports.ids=[549],exports.modules={56249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,o){return o in r?r[o]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,o)):"function"==typeof r&&"default"===o?r:void 0}}})},66826:(e,r,o)=>{o.d(r,{Fh:()=>A,Lz:()=>c,QO:()=>g});var t=o(47449),n=o.n(t),s=o(98432),i=o.n(s),a=o(62113),l=o(60614);o(41649);var u=o(44507);let c={session:{strategy:"jwt",maxAge:28800,updateAge:86400},jwt:{secret:"521764d7-838b-4feb-8528-cb977da31fec",maxAge:28800},secret:"521764d7-838b-4feb-8528-cb977da31fec",pages:{signIn:"/auth/login",error:"/auth/error"},cookies:{sessionToken:{name:"next-auth.session-token",options:{httpOnly:!0,sameSite:"lax",path:"/",secure:!1,maxAge:28800}},callbackUrl:{name:"next-auth.callback-url",options:{sameSite:"lax",path:"/",secure:!1}},csrfToken:{name:"next-auth.csrf-token",options:{httpOnly:!0,sameSite:"lax",path:"/",secure:!1}}},providers:[n()({name:"credentials",credentials:{username:{label:"Username",type:"text"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.username||!e?.password)return null;try{let r=await u.Z.user.findUnique({where:{username:e.username}});if(!r||!r.password||!await i().compare(e.password,r.password))return null;return{id:String(r.id),username:r.username,name:r.name||r.username,email:r.email,role:r.role}}catch(e){return console.error("Error during authentication:",e),null}}})],callbacks:{jwt:async({token:e,user:r})=>(r&&"username"in r&&"role"in r&&(e.sub=r.id,e.id=r.id,e.role=r.role,e.username=r.username,console.log("[NextAuth] JWT created for user:",{id:r.id,username:r.username,role:r.role})),e),session:async({session:e,token:r})=>(r&&e.user&&(e.user.id=String(r.sub||r.id),e.user.name=r.name,e.user.email=r.email,e.user.role=r.role,e.user.username=r.username,console.log("[NextAuth] Session created for user:",{id:r.sub||r.id,username:r.username,role:r.role})),e),async redirect({url:e,baseUrl:r}){if(console.log("[NextAuth] Redirect called with:",{url:e,baseUrl:r}),e.startsWith("/")){let o=`${r}${e}`;return console.log("[NextAuth] Redirecting to relative URL:",o),o}try{let o=new URL(e).origin,t=new URL(r).origin;if(o===t)return console.log("[NextAuth] Redirecting to same origin URL:",e),e}catch(e){console.log("[NextAuth] Error parsing URLs, using baseUrl:",e)}return console.log("[NextAuth] Redirecting to baseUrl:",r),r},signIn:async({user:e,account:r,profile:o,email:t,credentials:n})=>(console.log("[NextAuth] Sign in attempt for user:",{id:e.id,username:e.username,role:e.role}),!0)},events:{async signIn({user:e,account:r,profile:o,isNewUser:t}){console.log("[NextAuth] User signed in:",{id:e.id,username:e.username,isNewUser:t})},async signOut({token:e,session:r}){console.log("[NextAuth] User signed out:",{id:e?.sub||r?.user?.id})},async session({session:e,token:r}){console.log("[NextAuth] Session accessed for user:",{id:e?.user?.id,username:e?.user?.username})}},debug:"true"===process.env.NEXTAUTH_DEBUG},d="p_chart_auth_user",h=()=>"edge"===process.env.VERCEL_REGION;async function A(e,r){let o=await (0,a.getServerSession)(e,r,c);if(!o){let r=await (0,l.getToken)({req:e,secret:"521764d7-838b-4feb-8528-cb977da31fec"});return r?{user:{id:r.id,name:r.name,email:r.email,role:r.role},expires:new Date(1e3*r.exp).toISOString()}:(console.log("[ServerAuth] Authentication failed for",e.url),null)}return o}function g(e){return async(r,o)=>{try{console.log("\n======= API AUTH MIDDLEWARE START ======="),console.log(`[ServerAuth] Path: ${r.url}, Method: ${r.method}`),console.log("[ServerAuth] Request headers:",{cookie:r.headers.cookie?"[exists]":"[missing]","x-user-id":r.headers["x-user-id"],"x-user-role":r.headers["x-user-role"],authorization:r.headers.authorization?"[exists]":"[missing]","content-type":r.headers["content-type"]}),console.log("[ServerAuth] Request cookies:",r.cookies),r.headers.cookie&&console.log("[ServerAuth] Full cookie content:",r.headers.cookie),console.log("[ServerAuth] Attempting to get NextAuth session...");let t=await (0,a.getServerSession)(r,o,c);if(console.log("[ServerAuth] Session result:",t?"Found":"Not found"),t&&console.log("[ServerAuth] Session user data:",{id:t.user?.id,name:t.user?.name,role:t.user?.role}),t)return console.log("[ServerAuth] API request authenticated via NextAuth session"),console.log("======= API AUTH MIDDLEWARE END =======\n"),e(r,o,t);console.log("[ServerAuth] No session found, trying JWT token directly...");let n=await (0,l.getToken)({req:r,secret:"521764d7-838b-4feb-8528-cb977da31fec"});if(n){console.log("[ServerAuth] JWT token found:",{id:n.id,name:n.name,role:n.role});let t={user:{id:n.id,name:n.name,email:n.email,role:n.role},expires:new Date(1e3*n.exp).toISOString()};return console.log("[ServerAuth] API request authenticated via JWT token"),console.log("======= API AUTH MIDDLEWARE END =======\n"),e(r,o,t)}console.log("[ServerAuth] No token found, checking headers...");let s=r.headers["x-user-id"],i=r.headers["x-user-role"];if(s){console.log("[ServerAuth] API request authenticated via headers. User ID:",s);let t={user:{id:s,role:i||"user"},expires:new Date(Date.now()+864e5).toISOString()};if(h())console.log("[ServerAuth] Skipping active check");else try{let e=await u.Z.user.findUnique({where:{id:parseInt(s,10)},select:{isActive:!0}});if(!e||!e.isActive)return console.log(`[ServerAuth] API request rejected: User ${s} is inactive or not found`),console.log("======= API AUTH MIDDLEWARE END =======\n"),o.status(401).json({error:"Account deactivated or not found",code:"account_deactivated"})}catch(e){console.error("[ServerAuth] Error checking user active status:",e)}return console.log("[ServerAuth] API request authenticated via headers"),console.log("======= API AUTH MIDDLEWARE END =======\n"),e(r,o,t)}console.log("[ServerAuth] Checking for client auth cookie...");let A=r.cookies[d];if(A)try{console.log("[ServerAuth] Found client auth cookie, attempting to parse...");let t=JSON.parse(A);if(t&&t.id){console.log("[ServerAuth] Successfully parsed client auth cookie:",{id:t.id,role:t.role});let n={user:{id:t.id,name:t.name||"User",email:t.email||`user-${t.id}@example.com`,role:t.role||"user"},expires:new Date(Date.now()+864e5).toISOString()};return console.log("[ServerAuth] API request authenticated via client auth cookie"),console.log("======= API AUTH MIDDLEWARE END =======\n"),e(r,o,n)}}catch(e){console.error("[ServerAuth] Error parsing client auth cookie:",e)}return console.log("[ServerAuth] API request rejected: No valid authentication found"),console.log("======= API AUTH MIDDLEWARE END =======\n"),o.status(401).json({error:"Unauthorized"})}catch(e){return console.error("[ServerAuth] Error in auth middleware:",e),console.log("======= API AUTH MIDDLEWARE END =======\n"),o.status(500).json({error:"Internal Server Error"})}}}},44507:(e,r,o)=>{o.d(r,{Z:()=>s,_:()=>n});var t=o(53524);let n=global.prisma||new t.PrismaClient,s=n},47153:(e,r)=>{var o;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return o}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(o||(o={}))},71802:(e,r,o)=>{e.exports=o(20145)}};