"use strict";(()=>{var e={};e.id=4305,e.ids=[4305],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},42192:(e,r,t)=>{t.r(r),t.d(r,{config:()=>g,default:()=>f,routeModule:()=>m});var o={};t.r(o),t.d(o,{default:()=>p});var n=t(71802),a=t(47153),i=t(56249),s=t(66826),u=t(44507),d=t(41099);async function l(e,r,t){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{poNumber:o,operationCode:n}=e.body;if(console.log(`Starting operation for PO: ${o}, Operation: ${n}`),!o||!n)return r.status(400).json({error:"Missing required parameters"});let a=t?.user?.role||"",i="string"==typeof a&&"admin"===a.toLowerCase();console.log("User role:",a,"Is admin?",i);let s=await u.Z.productionOrder.findUnique({where:{poNumber:o},include:{operations:{include:{operationDefects:!0}}}});if(!s)return r.status(404).json({error:"Production order not found"});if("COMPLETED"===s.status&&!i)return console.log("Non-admin user tried to edit a completed production order"),r.status(403).json({error:"Only admin users can edit completed production orders"});let l=s.operations.find(e=>e.operation.toLowerCase()===n.toLowerCase());if(!l)return r.status(404).json({error:"Operation not found"});if(l.startTime)return r.status(400).json({error:"Operation has already been started"});let p=await u.Z.$transaction(async r=>{let o=t?.user?.id?parseInt(t.user.id):await c(r),a={...l},i=await r.operation.update({where:{id:l.id},data:{startTime:new Date,operatorId:o}}),u=await r.productionOrder.update({where:{id:s.id},data:{currentOperation:n,currentOperationStartTime:new Date,currentOperationEndTime:null,status:"IN_PROGRESS"},include:{operations:{include:{operationDefects:!0}}}});return await (0,d.U)({tableName:"operations",recordId:l.id,action:"update",oldValues:a,newValues:i,userId:o,...(0,d.n)(e)}),u});return r.status(200).json(p)}catch(e){return console.error("Error starting operation:",e),r.status(500).json({error:"An error occurred while starting the operation"})}}async function c(e){let r=await e.user.findFirst();if(!r)throw Error("No users found in the system");return r.id}let p=(0,s.QO)(l),f=(0,i.l)(o,"default"),g=(0,i.l)(o,"config"),m=new n.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/operations/start",pathname:"/api/operations/start",bundlePath:"",filename:""},userland:o})},41099:(e,r,t)=>{t.d(r,{U:()=>n,n:()=>a});var o=t(44507);async function n(e){console.log(`Creating audit log for ${e.tableName}:${e.recordId}, action: ${e.action}`);try{let r=String(e.recordId),t=e.oldValues?JSON.stringify(e.oldValues):null,n=e.newValues?JSON.stringify(e.newValues):null,a=await o.Z.auditLog.create({data:{tableName:e.tableName,recordId:r,action:e.action,oldValues:t,newValues:n,userId:e.userId,ipAddress:e.ipAddress||null,userAgent:e.userAgent||null}});return console.log(`Audit log created with ID: ${a.id}`),a}catch(e){return console.error("Error creating audit log:",e),null}}function a(e){let r=e.headers["x-forwarded-for"]||e.socket.remoteAddress||null,t=e.headers["user-agent"]||null;return{ipAddress:"string"==typeof r?r.split(",")[0].trim():null,userAgent:t}}}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[549],()=>t(42192));module.exports=o})();