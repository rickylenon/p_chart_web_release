"use strict";(()=>{var e={};e.id=1868,e.ids=[1868],e.modules={53524:e=>{e.exports=require("@prisma/client")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},43651:(e,t,r)=>{r.r(t),r.d(t,{config:()=>l,default:()=>d,routeModule:()=>c});var a={};r.r(a),r.d(a,{default:()=>u});var n=r(71802),o=r(47153),i=r(56249),s=r(44507);async function u(e,t){try{if("POST"!==e.method)return t.status(405).json({error:"Method not allowed"});let r=e.headers.authorization?.replace("Bearer ","");if(!(r&&r===process.env.SEED_KEY))return console.log("Unauthorized seed attempt"),t.status(401).json({error:"Unauthorized"});let a=await s.Z.user.count(),n=await s.Z.operationStep.count(),o=await s.Z.masterDefect.count();return t.status(200).json({success:!0,message:"Database was already seeded during build",data:{userCount:a,stepCount:n,defectCount:o}})}catch(e){return console.error("Error checking database:",e),t.status(500).json({success:!1,error:"Failed to check database",details:void 0})}}let d=(0,i.l)(a,"default"),l=(0,i.l)(a,"config"),c=new n.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/admin/seed",pathname:"/api/admin/seed",bundlePath:"",filename:""},userland:a})},44507:(e,t,r)=>{r.d(t,{Z:()=>o,_:()=>n});var a=r(53524);let n=global.prisma||new a.PrismaClient,o=n},47153:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(r||(r={}))},71802:(e,t,r)=>{e.exports=r(20145)}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=t(t.s=43651);module.exports=r})();