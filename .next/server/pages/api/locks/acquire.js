"use strict";(()=>{var e={};e.id=849,e.ids=[849],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},11744:(e,r,t)=>{t.r(r),t.d(r,{config:()=>p,default:()=>l,routeModule:()=>g});var s={};t.r(s),t.d(s,{default:()=>c});var o=t(71802),i=t(47153),d=t(56249),n=t(66826),u=t(44507);async function a(e,r,t){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let{resourceType:s,resourceId:o}="string"==typeof e.body?JSON.parse(e.body):e.body,i=t?.user;if(console.log(`Lock acquisition requested for ${s}:${o} by user ${i?.name} (${i?.id})`),!s||!o)return r.status(400).json({success:!1,error:"Resource type and ID are required"});if(!i||!i.id)return r.status(401).json({success:!1,error:"User not authenticated"});if("productionOrder"!==s)return r.status(400).json({success:!1,error:"Unsupported resource type"});let{statusCode:d,...n}=await u.Z.$transaction(async e=>{let r=await e.productionOrder.findUnique({where:{poNumber:o},select:{id:!0,editingUserId:!0,editingUserName:!0,lockedAt:!0}});if(!r)return{success:!1,error:"Resource not found",statusCode:404};let t=parseInt(i.id);if(null!==r.editingUserId&&r.editingUserId!==t&&r.lockedAt)return console.log(`Resource is locked by user ${r.editingUserName} (${r.editingUserId})`),{success:!1,isOwner:!1,statusCode:423,lockInfo:{userId:r.editingUserId,userName:r.editingUserName,lockedAt:r.lockedAt}};if(r.editingUserId===t)return console.log(`User already owns the lock for ${s}:${o}`),{success:!0,isOwner:!0,statusCode:200,lockInfo:{userId:r.editingUserId,userName:r.editingUserName,lockedAt:r.lockedAt}};let d=await e.productionOrder.update({where:{id:r.id},data:{editingUserId:t,editingUserName:i.name||i.username,lockedAt:new Date},select:{editingUserId:!0,editingUserName:!0,lockedAt:!0}});return console.log(`Lock acquired for ${s}:${o} by user ${i.name} (${i.id})`),{success:!0,isOwner:!0,statusCode:200,lockInfo:{userId:d.editingUserId,userName:d.editingUserName,lockedAt:d.lockedAt}}});return r.status(d||200).json(n)}catch(e){return console.error("Error acquiring lock:",e),r.status(500).json({success:!1,error:"Failed to acquire lock"})}}let c=(0,n.QO)(a),l=(0,d.l)(s,"default"),p=(0,d.l)(s,"config"),g=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/locks/acquire",pathname:"/api/locks/acquire",bundlePath:"",filename:""},userland:s})}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[549],()=>t(11744));module.exports=s})();