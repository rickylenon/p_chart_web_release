"use strict";(()=>{var e={};e.id=4558,e.ids=[4558],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},8937:(e,t,r)=>{r.r(t),r.d(t,{config:()=>c,default:()=>p,routeModule:()=>g});var a={};r.r(a),r.d(a,{default:()=>u});var o=r(71802),i=r(47153),n=r(56249),s=r(66826),d=r(44507);async function l(e,t,r){if(console.log("Operation Audit Logs API called"),"GET"!==e.method)return t.setHeader("Allow",["GET"]),t.status(405).json({error:`Method ${e.method} Not Allowed`});try{let a=r?.user?.role||"",o="string"==typeof a&&"admin"===a.toLowerCase();if(console.log("Operation Audit Logs API - User role:",a,"Is admin?",o),!o)return t.status(403).json({error:"Forbidden - Only admin users can access audit logs"});let{operationId:i,defectId:n,poNumber:s,type:l,limit:u="50",page:p="1"}=e.query;if(console.log("Operation Audit Logs API query params:",{operationId:i,defectId:n,poNumber:s,type:l,limit:u,page:p}),!i&&!s&&!n)return t.status(400).json({error:"Either operationId, defectId or poNumber is required"});let c={tableName:"operations"};if("defect"===l&&(c.tableName="operation_defects"),n)c.recordId=String(n);else if(i){if("defect"===l){let e=parseInt(String(i),10),r=(await d.Z.operationDefect.findMany({where:{operationId:e},select:{id:!0}})).map(e=>String(e.id));if(0===r.length)return t.status(200).json({data:[],pagination:{total:0,page:1,limit:parseInt(u,10)||50,pages:0}});c.recordId={in:r},console.log(`Found ${r.length} defects for operation ${i}`)}else c.recordId=String(i)}else if(s){let e=await d.Z.productionOrder.findUnique({where:{poNumber:String(s)},select:{id:!0,operations:{select:{id:!0}}}});if(!e)return t.status(404).json({error:"Production order not found"});let r=e.operations.map(e=>String(e.id));if(0===r.length)return t.status(200).json({data:[],pagination:{total:0,page:1,limit:parseInt(u,10)||50,pages:0}});if(c.recordId={in:r},"defect"===l){let e=(await d.Z.operationDefect.findMany({where:{operationId:{in:r.map(e=>parseInt(e,10))}},select:{id:!0}})).map(e=>String(e.id));if(0===e.length)return t.status(200).json({data:[],pagination:{total:0,page:1,limit:parseInt(u,10)||50,pages:0}});c.recordId={in:e}}}console.log("Final where clause for audit logs:",c);let g=Math.min(parseInt(u,10)||50,100),m=parseInt(p,10)||1,f=(m-1)*g,h=await d.Z.auditLog.count({where:c}),I=(await d.Z.auditLog.findMany({where:c,orderBy:{timestamp:"desc"},include:{user:{select:{name:!0,username:!0}}},skip:f,take:g})).map(e=>({id:e.id,tableName:e.tableName,recordId:e.recordId,action:e.action,oldValues:e.oldValues?JSON.parse(e.oldValues):null,newValues:e.newValues?JSON.parse(e.newValues):null,user:e.user.name||e.user.username,timestamp:e.timestamp,ipAddress:e.ipAddress,userAgent:e.userAgent}));return console.log(`Returning ${I.length} operation audit logs out of ${h} total`),t.status(200).json({data:I,pagination:{total:h,page:m,limit:g,pages:Math.ceil(h/g)}})}catch(e){return console.error("Error fetching operation audit logs:",e),t.status(500).json({error:"Failed to fetch operation audit logs",details:e instanceof Error?e.message:"Unknown error"})}}let u=(0,s.QO)(l),p=(0,n.l)(a,"default"),c=(0,n.l)(a,"config"),g=new o.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/audit-logs/operations",pathname:"/api/audit-logs/operations",bundlePath:"",filename:""},userland:a})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[549],()=>r(8937));module.exports=a})();