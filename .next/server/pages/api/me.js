"use strict";(()=>{var e={};e.id=8161,e.ids=[8161],e.modules={53524:e=>{e.exports=require("@prisma/client")},98432:e=>{e.exports=require("bcryptjs")},60614:e=>{e.exports=require("next-auth/jwt")},62113:e=>{e.exports=require("next-auth/next")},47449:e=>{e.exports=require("next-auth/providers/credentials")},41649:e=>{e.exports=require("next-auth/react")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},38890:(e,r,t)=>{t.r(r),t.d(r,{config:()=>f,default:()=>c,routeModule:()=>g});var n={};t.r(n),t.d(n,{default:()=>m});var o=t(71802),a=t(47153),i=t(56249),s=t(66826),u=t(44507),d=t(98432),l=t.n(d);async function p(e,r,t){if(!t||!t.user)return r.status(401).json({error:"Not authenticated"});let n=t.user.id;if("GET"===e.method)try{console.log(`Fetching enhanced user profile for user ID: ${n}`);try{let e=await u.Z.user.findUnique({where:{id:"string"==typeof n?parseInt(n,10):n},select:{id:!0,username:!0,name:!0,email:!0,role:!0,department:!0,isActive:!0,lastLogin:!0,_count:{select:{operations:!0}}}});if(!e)return r.status(404).json({error:"User not found"});let t=await u.Z.operation.findMany({where:{operatorId:"string"==typeof n?parseInt(n,10):n},orderBy:{encodedTime:"desc"},take:5,include:{productionOrder:{select:{poNumber:!0,itemName:!0}}}});return r.status(200).json({id:String(e.id),username:e.username||e.name,name:e.name,email:e.email,role:e.role,department:e.department,isActive:e.isActive,lastLogin:e.lastLogin,stats:{operationsCount:e._count.operations},recentActivity:t.map(e=>({id:e.id,operation:e.operation,poNumber:e.productionOrder.poNumber,itemName:e.productionOrder.itemName,startTime:e.startTime,endTime:e.endTime,timestamp:e.encodedTime}))})}catch(e){return console.error("Database error when fetching user profile:",e),r.status(200).json({id:t.user.id,username:t.user.username||t.user.name,role:t.user.role,isLimitedData:!0})}}catch(e){return console.error("Error in /api/me GET:",e),r.status(500).json({error:"Server error"})}if("PUT"===e.method)try{console.log(`Updating profile for user ID: ${n}`);let{name:t,email:o,password:a,department:i}=e.body;if(!await u.Z.user.findUnique({where:{id:"string"==typeof n?parseInt(n,10):n}}))return r.status(404).json({error:"User not found"});let s={name:t||null,email:o||null,department:i||null};a&&(console.log("Updating password"),s.password=await l().hash(a,10));let d=await u.Z.user.update({where:{id:"string"==typeof n?parseInt(n,10):n},data:s,select:{id:!0,username:!0,name:!0,email:!0,role:!0,department:!0,isActive:!0,lastLogin:!0,_count:{select:{operations:!0}}}});return console.log(`User profile updated successfully: ${d.username}`),r.status(200).json({id:String(d.id),username:d.username||d.name,name:d.name,email:d.email,role:d.role,department:d.department,isActive:d.isActive,lastLogin:d.lastLogin,stats:{operationsCount:d._count.operations},recentActivity:[]})}catch(e){return console.error("Error in /api/me PUT:",e),r.status(500).json({error:"Failed to update profile"})}return r.status(405).json({error:"Method not allowed"})}let m=(0,s.QO)(p),c=(0,i.l)(n,"default"),f=(0,i.l)(n,"config"),g=new o.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/me",pathname:"/api/me",bundlePath:"",filename:""},userland:n})}};var r=require("../../webpack-api-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[549],()=>t(38890));module.exports=n})();